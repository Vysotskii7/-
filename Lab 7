#include <iostream>
#include <stdarg.h>
#include <string.h>
#include <vector>
#include <math.h>

using namespace std;

// task 1 "Default parameters"
intprint_info(const char *last_name = "last_name", int course = 2, const char *group = "group")
{

	cout<<"Last name: "<<last_name<< "\n"
			<< "Course: "<< course << "\n"
			<< "Group: "<< group;

	return 0;
}

// task 2 "Variable parameters length"
intprint_even_quantity(int length, ...)
{
	intqnty = 0;
	va_listap;
	va_start(ap, length);
	for(int i=0; i < length; i++) {
		if(va_arg(ap,int) % 2 == 0) {
			qnty++;
		}
	}
	va_end(ap);

	returnqnty;
}

// task 3 "Overload"

intmax_array_element(int array[], intarray_length) {
	int max = array[0];
	for (int i = 0; i <array_length - 1; i++)
		if (array[i] > max) max = array[i];
	return max;
}

floatmax_array_element(float array[], intarray_length) {
	float max = array[0];
	for(int i = 0; i <array_length - 1; i++)
		if (array[i] > max) max = array[i];
	return max;
}

doublemax_array_element(double array[], intarray_length) {
	double max = array[0];
	for(int i = 0; i <array_length - 1; i++)
		if (array[i] > max) max = array[i];
	return max;
}

// task 4 "Template"
template<class T>

T find_max_array_value(T array[], intarray_length) {
	T max = array[0];
	for(int i = 0; i <array_length - 1; i++)
		if (array[i] > max) max = array[i];
	return max;
}

// task 5 "Function pointer"
typedef float(*ftpr)(float);

float equation(ftpr f, float a, float b, float e) {
	float x;
	do
	{
		x = (a+b) / 2;
		if((*f)(a)*f(x)<0)
			b = x;
		else a=x;
	}
	while ((*f)(x)>e &&fabs(a-b) > e);
	return x;
}

floattask_func(float x) {
	return 3 * sin(sqrt(x)) + 0.35 * x - 3.8;
}

int main()
{
	inttesting_array_int[] = {1,2,3,4,5,6,7,8,4,0};
	floattesting_array_float[] = {5.2f, 3.5f, 12.6f, 0.4f, 1.534f};
	doubletesting_array_double[] = {12.3, 14.88, 13.32, 3.32, 2.29};
	cout<< "Default parameters" <<endl; 
	print_info("Visotski", 4, "A-17");
	cout<<endl;
	print_info();
	cout<<endl;
	print_info("Visotski", 4);
	cout<<endl<<endl;

	cout<< "Variable parameters length cout" <<endl<<print_even_quantity(5, 3, 1, 1, 61, 3) <<endl<<endl;
	cout<< "Overloaded functions" <<endl;
	cout<<max_array_element(testing_array_int, 10) <<endl;
	cout<<max_array_element(testing_array_float, 5) <<endl;
	cout<<max_array_element(testing_array_double, 5) <<endl<<endl;
	cout<< "Template function" <<endl;
	cout<<find_max_array_value(testing_array_int, 10) <<endl<<endl;
	cout<<find_max_array_value(testing_array_float, 5) <<endl;
	cout<<find_max_array_value(testing_array_double, 5) <<endl<<endl;
	cout<< "Half-division equation" <<endl;
	cout<< equation(task_func, 2.0, 3.0, 2.2985) <<endl<<endl;


	return 0;
}
